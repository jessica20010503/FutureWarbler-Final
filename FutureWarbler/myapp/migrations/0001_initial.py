# Generated by Django 4.0.4 on 2022-05-02 05:50

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ADebt',
            fields=[
                ('a_debt_time', models.TimeField(primary_key=True, serialize=False)),
                ('a_debt_date', models.DateField()),
                ('a_debt_open', models.CharField(max_length=8)),
                ('a_debt_close', models.CharField(max_length=8)),
                ('a_debt_high', models.CharField(max_length=8)),
                ('a_debt_low', models.CharField(max_length=8)),
                ('a_debt_volume', models.CharField(max_length=8)),
            ],
            options={
                'db_table': 'a_debt',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('class_id', models.AutoField(primary_key=True, serialize=False)),
                ('class_title', models.CharField(max_length=50)),
                ('class_article', models.TextField()),
                ('class_photo', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'class',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Futures',
            fields=[
                ('futures_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('futures_name', models.CharField(max_length=10)),
                ('futures_deposit', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'futures',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IndexClass',
            fields=[
                ('index_class_id', models.AutoField(primary_key=True, serialize=False)),
                ('index_class_title', models.CharField(max_length=50)),
                ('index_class_article', models.TextField()),
                ('index_class_photo', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'index_class',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('member_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('member_password', models.CharField(max_length=50)),
                ('member_name', models.CharField(max_length=50)),
                ('member_gender', models.CharField(max_length=50)),
                ('member_birth', models.DateField()),
                ('member_photo', models.CharField(max_length=100)),
                ('member_phone', models.CharField(max_length=50)),
                ('member_email', models.CharField(max_length=50)),
                ('member_twd', models.CharField(max_length=50)),
                ('member_usd', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'member',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('news_id', models.IntegerField(primary_key=True, serialize=False)),
                ('news_title', models.TextField(blank=True, null=True)),
                ('news_content', models.TextField(blank=True, null=True)),
                ('news_time', models.TextField(blank=True, null=True)),
                ('news_author', models.TextField(blank=True, null=True)),
                ('news_photo', models.TextField(blank=True, null=True)),
                ('news_area', models.BigIntegerField(blank=True, null=True)),
                ('news_type', models.BigIntegerField(blank=True, null=True)),
                ('news_category', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'news',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Wheat',
            fields=[
                ('wheat_time', models.TimeField(primary_key=True, serialize=False)),
                ('wheat_date', models.DateField()),
                ('wheat_open', models.CharField(max_length=8)),
                ('wheat_close', models.CharField(max_length=8)),
                ('wheat_high', models.CharField(max_length=8)),
                ('wheat_low', models.CharField(max_length=8)),
                ('wheat_volume', models.CharField(max_length=8)),
            ],
            options={
                'db_table': 'wheat',
                'managed': True,
                'unique_together': {('wheat_time', 'wheat_date')},
            },
        ),
        migrations.CreateModel(
            name='Tx',
            fields=[
                ('tx_time', models.TimeField(primary_key=True, serialize=False)),
                ('tx_date', models.DateField()),
                ('tx_open', models.CharField(max_length=8)),
                ('tx_close', models.CharField(max_length=8)),
                ('tx_high', models.CharField(max_length=8)),
                ('tx_low', models.CharField(max_length=8)),
                ('tx_volume', models.CharField(max_length=8)),
            ],
            options={
                'db_table': 'tx',
                'managed': True,
                'unique_together': {('tx_time', 'tx_date')},
            },
        ),
        migrations.CreateModel(
            name='Tf',
            fields=[
                ('tf_time', models.TimeField(primary_key=True, serialize=False)),
                ('tf_date', models.DateField()),
                ('tf_open', models.CharField(max_length=8)),
                ('tf_close', models.CharField(max_length=8)),
                ('tf_high', models.CharField(max_length=8)),
                ('tf_low', models.CharField(max_length=8)),
                ('tf_volume', models.CharField(max_length=8)),
            ],
            options={
                'db_table': 'tf',
                'managed': True,
                'unique_together': {('tf_time', 'tf_date')},
            },
        ),
        migrations.CreateModel(
            name='Te',
            fields=[
                ('te_time', models.TimeField(primary_key=True, serialize=False)),
                ('te_date', models.DateField()),
                ('te_open', models.CharField(max_length=8)),
                ('te_close', models.CharField(max_length=8)),
                ('te_high', models.CharField(max_length=8)),
                ('te_low', models.CharField(max_length=8)),
                ('te_volume', models.CharField(max_length=8)),
            ],
            options={
                'db_table': 'te',
                'managed': True,
                'unique_together': {('te_time', 'te_date')},
            },
        ),
        migrations.CreateModel(
            name='Soy',
            fields=[
                ('soy_time', models.TimeField(primary_key=True, serialize=False)),
                ('soy_date', models.DateField()),
                ('soy_open', models.CharField(max_length=8)),
                ('soy_close', models.CharField(max_length=8)),
                ('soy_high', models.CharField(max_length=8)),
                ('soy_low', models.CharField(max_length=8)),
                ('soy_volume', models.CharField(max_length=8)),
            ],
            options={
                'db_table': 'soy',
                'managed': True,
                'unique_together': {('soy_time', 'soy_date')},
            },
        ),
        migrations.CreateModel(
            name='Mtx',
            fields=[
                ('mtx_time', models.TimeField(primary_key=True, serialize=False)),
                ('mtx_date', models.DateField()),
                ('mtx_open', models.CharField(max_length=8)),
                ('mtx_close', models.CharField(max_length=8)),
                ('mtx_high', models.CharField(max_length=8)),
                ('mtx_low', models.CharField(max_length=8)),
                ('mtx_volume', models.CharField(max_length=8)),
            ],
            options={
                'db_table': 'mtx',
                'managed': True,
                'unique_together': {('mtx_time', 'mtx_date')},
            },
        ),
        migrations.CreateModel(
            name='MiniSp',
            fields=[
                ('mini_sp_time', models.TimeField(primary_key=True, serialize=False)),
                ('mini_sp_date', models.DateField()),
                ('mini_sp_open', models.CharField(max_length=8)),
                ('mini_sp_close', models.CharField(max_length=8)),
                ('mini_sp_high', models.CharField(max_length=8)),
                ('mini_sp_low', models.CharField(max_length=8)),
                ('mini_sp_volume', models.CharField(max_length=8)),
            ],
            options={
                'db_table': 'mini_sp',
                'managed': True,
                'unique_together': {('mini_sp_time', 'mini_sp_date')},
            },
        ),
        migrations.CreateModel(
            name='MiniRussell',
            fields=[
                ('mini_russell_time', models.TimeField(primary_key=True, serialize=False)),
                ('mini_russell_date', models.DateField()),
                ('mini_russell_open', models.CharField(max_length=8)),
                ('mini_russell_close', models.CharField(max_length=8)),
                ('mini_russell_high', models.CharField(max_length=8)),
                ('mini_russell_low', models.CharField(max_length=8)),
                ('mini_russell_volume', models.CharField(max_length=8)),
            ],
            options={
                'db_table': 'mini_russell',
                'managed': True,
                'unique_together': {('mini_russell_time', 'mini_russell_date')},
            },
        ),
        migrations.CreateModel(
            name='MiniNastaq',
            fields=[
                ('mini_nastaq_time', models.TimeField(primary_key=True, serialize=False)),
                ('mini_nastaq_date', models.DateField()),
                ('mini_nastaq_open', models.CharField(max_length=8)),
                ('mini_nastaq_close', models.CharField(max_length=8)),
                ('mini_nastaq_high', models.CharField(max_length=8)),
                ('mini_nastaq_low', models.CharField(max_length=8)),
                ('mini_nastaq_volume', models.CharField(max_length=8)),
            ],
            options={
                'db_table': 'mini_nastaq',
                'managed': True,
                'unique_together': {('mini_nastaq_time', 'mini_nastaq_date')},
            },
        ),
        migrations.CreateModel(
            name='MiniDow',
            fields=[
                ('mini_dow_time', models.TimeField(primary_key=True, serialize=False)),
                ('mini_dow_date', models.DateField()),
                ('mini_dow_open', models.CharField(max_length=8)),
                ('mini_dow_close', models.CharField(max_length=8)),
                ('mini_dow_high', models.CharField(max_length=8)),
                ('mini_dow_low', models.CharField(max_length=8)),
                ('mini_dow_volume', models.CharField(max_length=8)),
            ],
            options={
                'db_table': 'mini_dow',
                'managed': True,
                'unique_together': {('mini_dow_time', 'mini_dow_date')},
            },
        ),
        migrations.CreateModel(
            name='Dcboard',
            fields=[
                ('dcboard_id', models.AutoField(primary_key=True, serialize=False)),
                ('dcboard_title', models.CharField(max_length=50)),
                ('dcboard_releasetime', models.DateTimeField()),
                ('dcboard_content', models.TextField()),
                ('dcboard_likes', models.IntegerField()),
                ('dcboard_uploads', models.CharField(max_length=200)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='myapp.member')),
            ],
            options={
                'db_table': 'dcboard',
                'managed': True,
                'unique_together': {('dcboard_id', 'member')},
            },
        ),
        migrations.CreateModel(
            name='Corn',
            fields=[
                ('corn_time', models.TimeField(primary_key=True, serialize=False)),
                ('corn_date', models.DateField()),
                ('corn_open', models.CharField(max_length=8)),
                ('corn_close', models.CharField(max_length=8)),
                ('corn_high', models.CharField(max_length=8)),
                ('corn_low', models.CharField(max_length=8)),
                ('corn_volume', models.CharField(max_length=8)),
            ],
            options={
                'db_table': 'corn',
                'managed': True,
                'unique_together': {('corn_time', 'corn_date')},
            },
        ),
        migrations.CreateModel(
            name='TechnicalStrategry',
            fields=[
                ('technical_strategy_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('technical_strategry_period', models.CharField(max_length=10)),
                ('technical_strategry_start', models.DateField()),
                ('technical_strategry_end', models.DateField()),
                ('technical_strategy_long_short', models.CharField(default='', max_length=11)),
                ('technical_strategy_stop_lp', models.CharField(default='', max_length=11)),
                ('technical_strategy_money_manage', models.CharField(default='', max_length=11)),
                ('technical_strategry_enter', models.CharField(default='', max_length=11)),
                ('technical_strategry_exit', models.CharField(default='', max_length=11)),
                ('futures', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='myapp.futures')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='myapp.member')),
            ],
            options={
                'db_table': 'technical_strategry',
                'managed': True,
                'unique_together': {('technical_strategy_id', 'member')},
            },
        ),
        migrations.CreateModel(
            name='IntelligentStrategy',
            fields=[
                ('intelligent_strategy_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('intelligent_strategy_algorithm', models.CharField(max_length=10)),
                ('intelligent_strategy_long_short', models.CharField(default='', max_length=11)),
                ('intelligent_strategy_money_manage', models.CharField(default='', max_length=11)),
                ('intelligent_strategy_stop_pl', models.CharField(default='', max_length=11)),
                ('futures', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='myapp.futures')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='myapp.member')),
            ],
            options={
                'db_table': 'intelligent_strategy',
                'managed': True,
                'unique_together': {('intelligent_strategy_id', 'member_id')},
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('feedback_id', models.AutoField(primary_key=True, serialize=False)),
                ('feedback_content', models.TextField()),
                ('dcboard', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='myapp.dcboard')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='myapp.member')),
            ],
            options={
                'db_table': 'feedback',
                'managed': True,
                'unique_together': {('feedback_id', 'member')},
            },
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('member', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='myapp.member')),
                ('buy_qty', models.IntegerField()),
                ('buy_mon', models.IntegerField()),
                ('buy_time', models.DateField()),
                ('sell_qty', models.IntegerField()),
                ('sell_mon', models.IntegerField()),
                ('sell_time', models.DateField()),
                ('record', models.IntegerField()),
                ('futures', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='myapp.futures')),
            ],
            options={
                'db_table': 'history',
                'managed': True,
                'unique_together': {('member', 'futures')},
            },
        ),
        migrations.CreateModel(
            name='Newscontent',
            fields=[
                ('news_id', models.IntegerField(primary_key=True, serialize=False)),
                ('news_title', models.TextField(blank=True, null=True)),
                ('news_content', models.TextField(blank=True, null=True)),
                ('news_time', models.TextField(blank=True, null=True)),
                ('news_author', models.TextField(blank=True, null=True)),
                ('news_photo', models.TextField(blank=True, null=True)),
                ('news_area', models.BigIntegerField(blank=True, null=True)),
                ('member_id', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'news_content',
                'managed': True,
            },
        ),
    ]
